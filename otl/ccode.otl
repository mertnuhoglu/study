_ id=r_lastid ccd_0010

ccode.otl id=g13853
parent
	refmine kms <url:file:///~/projects/myrepo/general/refmine.otl#r=g11660>
rfr
	regex ~/projects/study/otl/cregex.otl
	books ~/projects/study/otl/cbooks.otl
ndx id=g14427
	android android2 <url:file:///~/projects/study/otl/ccode.otl#r=g12841>
	awk <url:file:///~/projects/study/otl/ccode.otl#r=g11686>
	bash <url:file:///~/projects/study/otl/ccode.otl#r=g11687>
	clojure-otl.md <url:file:///~/prj/study/logseq-study/pages/clojure-otl.md#r=g14426>
		conjure <url:file:///~/prj/study/logseq-study/pages/clojure-otl.md#r=g14425>
	osx macos cosx.otl  <url:file:///~/projects/study/otl/cosx.otl#r=g13852>
	pkm tools <url:file:///~/projects/study/otl/ccode.otl=g13667>
pnt
	pkm tools id=g13667
		logseq: logseq2 outliner notes manager pkm <url:file:///~/projects/study/otl/ccode.otl=g13499>
		obsidian: pkm <url:file:///~/prj/study/otl/ccode.otl#r=g13498>
		[zk](https://github.com/mickael-menu/zk)
		dendron
		[Neuron Zettelkasten](https://neuron.zettel.page/editor)
		[Emanote](https://emanote.srid.ca/)
		[jakewvincent/mkdnflow.nvim](https://github.com/jakewvincent/mkdnflow.nvim)
	text expansion expander (metin tamamlama, auto completion) uygulaması: espanso id=g13472
		rfr:
			Espanso (Text Expansion) <url:file:///~/prj/study/logseq-study/pages/espanso.md#r=g13473>
	convert tree/outline to excel/flat table:
		Fill down = outline tree to linear tree <url:file:///~/projects/study/bash/table_fill_down.md#r=g12547>
		nxt
			[Representing and Editing JSON with Spreadsheets | by Don Hopkins | Medium](https://donhopkins.medium.com/representing-and-editing-json-with-spreadsheets-8f8832db5239)
	Cheatsheet hazırlama id=g12546
		ref
			https://github.com/jsvine/visidata-cheat-sheet
		a01: visidata projesini şablon olarak kullan
			cd /Users/mertnuhoglu/codes/python/visidata-cheat-sheet
			edit ~/codes/python/visidata-cheat-sheet/input/cheat-sheet.yaml
			make html
			chromium tmp.html
			print > pdf
		a02: latex kullan
			https://github.com/readevalprintlove/clojurescript-cheatsheet/blob/master/cljs-cheatsheet.tex
			bu tex dosyasını overleaf ile düzenle ve pdf oluştur
	Print documents with syntax coloring in vim id=g12550
		source code:
			ref: :TOhtml <url:file:///~/projects/study/otl/cvim.otl#r=g11899>
		markdown docs:
			ref: pandoc2 <url:file:///~/projects/study/otl/ccode.otl#r=g11900>
stuff
	quotes: single-quoted double-quoted 
		https://stackoverflow.com/questions/3446216/what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php
			for php:
				strings specified in 4 ways:
				1. single quoted string
					display things as is
					variables and escape sequences are not interpreted
						except: literal single quote
							\'
				2. double quote strings
					evaluate variables
				3. heredoc
					starts with `<<<`
				4. nowdoc
	abstraction
		http://www.sandimetz.com/blog/2016/1/20/the-wrong-abstraction
			duplication is far cheaper than the wrong abstraction
	shaape
		examples
			- "inner[12]": {fill:[[0.3, 0.6, 0.6], flat], frame:[[0, 0, 0], dashed, 1], text:[[0, 0, 0,]]}
				fill: flat                                                                                          
					no gradient
				inner[12]
					matches: inner1, inner2
			- ".*": ...
				matches: all objects
		keys
			fill
				polygon, arrow, line
			frame
				polygon frame or arrow
			text
			fill attributes
				shadow / no-shadow
					- ".*": {fill: [no-shadow]}
				solid / dashed / dotted / dash-dotted
					line styles
					- "_line_" : ...
						all lines
				color definitions:
					red / green / blue
					[0.5, 0.5, 0.5]
					multiple:
						[red, [0, 1, 0]]
				width of line (single number)
					fill: [3.5]
			frame attributes
				solid / ...
				color definitions
				width
			text attributes
				font family
					in pygtk format
						http://www.pygtk.org/docs/pygtk/class-pangofontdescription.html#constructor-pangofontdescription
					{text : ["Courier italic 9", red, shadow]}
	run h2 terminal client
		<url:file:///usr/local/Cellar/h2/1.4.190/libexec/bin>
		java -cp h2*.jar org.h2.tools.RunScript -url jdbc:h2:~/test -script test.sql
		java -cp /usr/local/Cellar/h2/1.4.190/libexec/bin/h2*.jar org.h2.tools.Shell 
		RUNSCRIPT FROM 'test.sql'
	interview questions
		https://www.pramp.com/#/
			tech interview practice
		resource collections
			https://github.com/andreis/interview
			https://github.com/jwasham/coding-interview-university
			https://github.com/arialdomartini/Back-End-Developer-Interview-Questions
			https://github.com/MaximAbramchuck/awesome-interview-questions
			https://github.com/kojino/120-Data-Science-Interview-Questions
			https://github.com/hopelessoptimism/cracking-the-data-science-interview
		tips and hackernews
			https://news.ycombinator.com/item?id=17333697
			https://github.com/yangshun/tech-interview-handbook/blob/master/preparing/cheatsheet.md
			https://news.ycombinator.com/item?id=15681465
			https://news.ycombinator.com/item?id=15468786
			https://medium.freecodecamp.org/software-engineering-interviews-744380f4f2af
			https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/
	convert word to markdown id=g12808
		ref: [Convert a Microsoft Word document to markdown - Darragh ORiordan](https://www.darraghoriordan.com/2021/07/16/converting-word-doc-to-markdown-md/)
		e01: tek dosya
			pandoc -f docx -t markdown my-document.docx -o my-markdown.md --extract-media=./
		e02: bütün docx dosyaları:
			for FILE in *.docx; do
				pandoc -f docx -t markdown ${FILE} -o ${FILE}.md --extract-media=./
			done
browsers
	chrome
		ref
			<url:file:///~/projects/study/js/study_chrome_devtools.Rmd>
		shortcuts
			#!i   developer tools
		monitor events
			https://developers.google.com/web/tools/chrome-devtools/debug/command-line/events?hl=en
			view even listeners
				getEventListeners(document)
				registered on dom elements
					.select dom > event listeners
		display console as drawer
			Esc > menu > Show Console
	vivaldi
		shortcuts id=g12572
			| Move Active Tab Forward/Backward | #+dn/up|
			| Move Tab to New Window | #+P |
		quick commands
			https://help.vivaldi.com/article/quick-commands/
				#e f2
				add notes
				navigate 
					open tabs
					history
					bookmarks
					commands
				nicknames for bookmarks
					nickname for folder
		screenshot
			https://help.vivaldi.com/guide/key-features/take-a-screenshot/
				inside notes panel
				normal screenshot
	browser plugins
		care your eyes
			^!x	toggle background: black/white
		surfingkeys: vim kısayollarıyla tarayıcı kullanmak id=g13255
			rfr: 
				~/prj/private_dotfiles/.config/chrome/surfingkeys.js
				surfingkeys: vim emulation for chrome <url:/Users/mertnuhoglu/projects/study/code/study_code.Rmd#tn=surfingkeys: vim emulation for chrome>
			shortcuts
				H		tab history
				T		tabs list
				>>: move the current tab to the right
				<<: move the current tab to the left
				W: open the current tab in a new window or merge it back to the previous window
				gx $: close all tabs after the current tab
				alt p: pin the current tab
				B: Go to most previously used tab
				T: View all tabs
				yg: screenshot/capture the current page
				yG: fully screenshot/capture the current page
				b: open you bookmark
				: : open “command line” box on the current page.
cloud
	hosting2 hosting domain id=g13192
		rfr
			netlify # netlify <url:file:///~/projects/study/otl/ccode.otl#r=g10732>
		email hosting
			Google Domains > .Domain > Manage > Get a custom email with Workspace > Manage Workspace > Restore Google Workspace Records
			bunu yapınca otomatik MX recordlarını oluşturuyor
	gcloud # gcloud # google cloud  id=g10740
		gcloud # gcloud # google cloud  <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10740>
			gcloud compute instances list
			ssh ile bağlantı
				https://cloud.google.com/compute/docs/instances/adding-removing-ssh-keys
				https://cloud.google.com/compute/docs/instances/adding-removing-ssh-keys#edit-ssh-metadata
					project-wide public ssh keys
						console
							https://console.cloud.google.com/compute/metadata/sshKeys?_ga=2.98501208.-654288281.1541673647&project=bizqualify&folder&organizationId
							ssh keys > edit > Add
							enter your public ssh key file
								~/.ssh/id_rsa.pub
						gcloud
							1. obtain metadata
								gcloud compute project-info describe
							2. copy public ssh keys
							3. create a new text file and paste ssh keys there
							4. submit this text file
								gcloud compute project-info add-metadata --metadata-from-file ssh-keys=[LIST_PATH]
					adding or removing instance-level public ssh keys
						gcloud
							1.
								gcloud compute instances describe [INSTANCE_NAME]
								gcloud compute instances describe bqsnap
								error: no instance
									- The resource 'projects/bizqualify/zones/europe-west1-c/instances/bqsnap' was not found
									gcloud compute instances describe --zone=us-east1-d bqsnap
				https://cloud.google.com/compute/docs/instances/connecting-advanced#thirdpartytools
					connecting using third-party tools
						ssh
							find external ip address of the instance
								https://console.cloud.google.com/compute/instances?project=bizqualify
									bqsnap 104.196.192.125
							edit ~/.ssh/config
								Host gcpbqsnap
								User mertnuhoglu
								Hostname 104.196.192.125
							ssh gcpbqsnap
					how to connect with root?
						there is no root user
						but you can run `sudo`
	aws # aws # amazon id=g10640
		rfr: aws <url:file:///~/projects/study/aws.otl#r=g13081>
	digitalocean # DigitalOcean
		official user manual - digitalocean
			Block Storage Volumes
				https://www.digitalocean.com/docs/volumes/
		add new user
			https://www.digitalocean.com/community/tutorials/how-to-add-and-delete-users-on-an-ubuntu-14-04-vps
			https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04#step-four-
			adduser mertnuhoglu
			usermod -aG sudo mertnuhoglu
			su - mertnuhoglu
			mkdir ~/.ssh
			chmod 700 ~/.ssh
			# localhost
			cat ~/.ssh/id_rsa.pub | ssh root@[your.ip.address.here] "cat >> ~/.ssh/authorized_keys"
				opt
					vim ~/.ssh/authorized_keys
						# localhost
						cat ~/.ssh/id_rsa.pub | pbcopy
						# paste here
			disallow password access
				sudo vim /etc/ssh/sshd_config
					PermitRootLogin without-password
		ubuntu-01
			static html files
				/srv/www/veribilimi.mertnuhoglu.com/html
			deployment scripts
				deployhugo
				/Users/mertnuhoglu/projects/stuff/bash
		ssh and add new user
			settings > reset password
			ssh root@ > passwd
			adduser mertnuhoglu
			usermod -aG sudo mertnuhoglu
			su - mertnuhoglu
			sudo ls -la /root
		add ssh public key
			client
				cat ~/.ssh/id_rsa.pub | ssh root@[your.ip.address.here] "cat >> ~/.ssh/authorized_keys"
			disallow password access
				vim /etc/ssh/sshd_config
					PermitRootLogin without-password
		upload
		install mongo
			https://www.digitalocean.com/community/tutorials/how-to-install-mongodb-on-ubuntu-16-04
				sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
				echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
				sudo apt-get update
				sudo apt-get install -y mongodb-org --allow-unauthenticated
				sudo vim /etc/systemd/system/mongodb.service
					# paste content
				sudo systemctl start mongodb
				sudo systemctl status mongodb
				sudo systemctl enable mongodb
				sudo systemctl mongodb stop
			access
				sudo ufw allow 27017
					allow from everywhere
		install java
			https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04
			sudo apt-get update
			# sudo apt-get install default-jre
			sudo apt-get install default-jdk
			sudo update-alternatives --config java
			sudo nano /etc/environment
				JAVA_HOME="/usr/lib/jvm/java-8-oracle"
	netlify # netlify id=g10732
		netlify # netlify <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10732>
		articles
			https://www.savjee.be/2017/10/Static-website-hosting-who-is-fastest/
				static website
					Firebase Hosting
					Netlify
					Google Cloud Storage
					S3
					CloudFront
			https://codewithhugo.com/deployment-options-netlify---dokku-on-digitalocean-vs-now.sh-github-pages-heroku-and-aws/
			https://www.netlifycms.org
			https://www.chrisanthropic.com/blog/2018/migrating-blog-from-aws-stack-to-netlify/#next-steps
			https://www.thechens.org/post/moving-to-netlify/
				netlify is far superior to aws
				benefits of aws
					host your site from root domain (not www)
				benefits of netlify
					cdn is automatic
						to use cloudfront (aws cdn)
							1. setup s3 bucket for static files
							2. setup cloudfront pointing to your s3
							3. setup route53 dns settings to point to your cloudfront
						complexities:
							s3: needs a security policy
							cloudfront: several options to set
							if root domain: duplicate s3 bucket
					ssl is one-click
						aws setup: difficult
							1. provision a certificate
							2. verify domain over email
							3. setup up cf settings to use the certificate
							4. change aws region settings 
					invalidates cdn automatically
						aws
							invalidate cf distribution everytime i  push to s3
					netlify is free
						aws:
							$0.5 for route53
							$0.2 for s3 and cf
						netlify
							allows DNS at Google Domains
					many more features
						you can use github and let netlify build with hugo
			https://www.thechens.org/post/ditching-aws/
				storage: from s3/glacier to google nearline
					easier to use and understand
				dns: route53 to google domains
					google is free
				static website: s3/cloudfront to netlify
				prepayment: with google possible
databases
	sqlite sqlite2 id=g12920
		ref
			~/projects/study/db/sqlite.otl
	postgresql postgres2 postgresql2
		ref: ~/projects/study/otl/cdb.otl
	shard
		horizontal partition of data
		each shard is held on a separate database server instance
development practices and methods
	development practices and methods id=g10659
		development practices and methods <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10659>
		beklenmedik hatalarda küçük şekillerde test et: id=g10660
			beklenmedik hatalarda küçük şekillerde test et: <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10660>
			opt01: write_csv(df[from:to,])
				ref: <url:/Users/mertnuhoglu/projects/bizqualify/BQ-data-run/datarun/debug_missing_data_20181027.md#tn=Disable Scientific Notation in write_csv>
				code
					write.csv(bd11[270:290,], "/home/ubuntu/bizqualify_data/tmp.csv", na = "")
					COPY data_20181105.all_data2 FROM '/home/ubuntu/bizqualify_data/tmp.csv' DELIMITER ',' CSV HEADER;
			opt02: sadece sorunlu kolonu test et: bq_total_assets
				ref: <url:/Users/mertnuhoglu/projects/bizqualify/BQ-data-run/datarun/debug_missing_data_20181027.md#tn=Type Mismatch in INSERT INTO ... SELECT .. FROM ...>
				INSERT INTO data_20181105.all_data_bq_total_assets 
					SELECT ad09_minus_ad11.bq_total_assets
					FROM ad09_minus_ad11;
				INSERT INTO data_20181105.all_data3 
					select bq_total_assets from data_20181105.all_data_bq_total_assets where bq_total_assets IS NOT NULL limit 10;
		attention/typo like mistakes id=g10661
			attention/typo like mistakes <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10661>
			ref
				standart/dikkat hatalarını gözden geçir 20180918	<url:file:///~/Dropbox/mynotes/general/rules.md#r=g10506>
			opt01: running a temporary script instead of the real one
				ex:
					running a temporary <script>_02.sh script because of copy-pasting:
						./28_backup_and_load_to_production_02.sh data_${data_run_date} 
					solution:
						./28_backup_and_load_to_production.sh data_${data_run_date} 
git git2 id=g10500
	rfr: git  <url:file:///~/projects/study/otl/git.otl#r=g13080>
haskell
		
		tutorials
			Haskell to javascript
				https://lettier.github.io/posts/2016-07-04-haskell-to-javascript.html
				tek tek satır satır anlatıyor
		tools
			build tool: haskell stack
				https://github.com/commercialhaskell/stack
		articles/videos
			Haskell Sucks
				if you can avoid avoid it 
				monad difficult to teach
				lazy vs. 
			Haskell Monads in 8 Minutes
json edn yaml - json2 edn2 yaml2 id=g12415
	ref: ~/projects/study/otl/json.otl
latex
	rfr: latex <url:file:///~/projects/study/otl/latex.otl#r=g13082>
jq: json query
security
		MFA (multi-factor authentication)
			mobile apps
				Google Authenticator vs. Authy vs. FreeOTP. What do you guys think?
					https://www.reddit.com/r/privacy/comments/2q01bb/google_authenticator_vs_authy_vs_freeotp_what_do/
					pros and cons
						authy: 
							+ has PIN protection 
								needs to enter PIN to use the tool
							+ cloud backup
								if you lose mobile phone, you can restore from cloud
firebug
	how to audit js events and functions
		http://stackoverflow.com/questions/11097234/using-firefox-how-can-i-monitor-all-javascript-events-that-are-fired
		opt
			firebug > html > events
			firebug > body > right > log > events
				console > enable
				console > persist
bash bash2 id=g11687
	rfr: bash <url:file:///~/projects/study/otl/bash.otl#r=g13079>
clojure clojure2 id=g11835
	clojure2 <url:file:///~/projects/study/otl/ccode.otl#r=g11835>
	ref
		~/projects/study/clj/clojure.otl
networking
	http protocol id=g10631
		http protocol <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10631>
			articles - http
				Bir web isteğinin anatomisi
					https://medium.com/@gokhansengun/bir-web-iste%C4%9Finin-anatomisi-ec54d78c8da5
				Komut satırı HTTP araçları — HTTPie
					https://medium.com/@gokhansengun/komut-sat%C4%B1r%C4%B1-http-ara%C3%A7lar%C4%B1-httpie-b3cd97891b12
				https://github.com/jkbrzt/httpie
					http like curl
				Ağ trafiği dinleme araçları 
					Ağ trafiği dinleme araçları — 1
						https://medium.com/@gokhansengun/ağ-trafiği-dinleme-araçları-1-c7c585bc56a3
						Wireshark
						eksikleri:
							SSL/TLS takip edemez
					Ağ trafiği dinleme araçları — 2
						https://medium.com/@gokhansengun/ağ-trafiği-dinleme-araçları-2-effe9fa4686e
						Fiddler, Burp Suite, Charles Proxy
					Ağ trafiği dinleme araçları — 3
						https://medium.com/@gokhansengun/ağ-trafiği-dinleme-araçları-3-27f2a1fc634c
					Linux komut satırında hayatta kalma ipuçları — 1
						https://medium.com/@gokhansengun/linux-komut-satırında-hayatta-kalma-ipuçları-1-78ba77c51dd6
					strace ne işe yarar ve nasıl kullanılır?
						https://medium.com/@gokhansengun/strace-ne-işe-yarar-ve-nasıl-kullanılır-c46036ffa0
						strace ile http request'leri de izlenebilir
						ex01:
							$ strace ls
			strace osx'te nasıl çalıştırılır?
				SIP kısıtlamasından dolayı, artık dtrace dtruss çalışmıyor.
				opt01: programları kısıtlı ortamdan özgür ortama taşı
					bunun tek çözümü, trace edilecek uygulamayı kendi dizinine kopyalayıp test etmek
						https://stackoverflow.com/questions/33476432/is-there-a-workaround-for-dtrace-cannot-control-executables-signed-with-restri
					ex 
						$ sudo cp $(which ping) .
						$ sudo dtruss ./ping google.com
			veri gönderme - http id=g10651
				veri gönderme - http <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10651>
				ref
					Form Data: x-www-form-urlencoded and form-data <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10650>
				verilerin gönderilmesi için iki enctype seçeneği var:
					x-www-form-urlencoded ve form-data
					x-www-form-urlencoded olunca, tüm veriler bir key-value pair'ları halinde POST body içinde gönderiliyor
					form-data olunca, çok parçalı halde yollanıyor
						dosya gönderme için bunu tavsiye ediyorlar
					curl'de bunların karşılıkları:
						-d --data --data-binary
							x-www-form-urlencoded
						-F --form-data
							form-data
						ex
							curl -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: text/csv" -d $'company_id,company_extid,company_name\n201,,company_201'  http://localhost:8080/rest/company
							curl -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" -d '[{"company_id": "103", "company_name":"company_103"},{"company_id": "102", "company_name":"company_102"}]'  http://localhost:8080/rest/company
							curl -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" --data-binary @company02.json http://localhost:8080/rest/company
							curl -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" --form file=@company02.json http://localhost:8080/rest/company
			Form Data: x-www-form-urlencoded and form-data id=g10650
				Form Data: x-www-form-urlencoded and form-data <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10650>
				https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST
					https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms
					https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Sending_and_retrieving_form_data
						Form data (application/x-www-form-urlencoded) is made of URL-encoded lists of key/value pairs. For transmitting binary data, the HTTP request is reshaped into multipart/form-data
						Sending Form Data
							3 ways:
							opt01: XMLHttpRequest manually
								prepare data by url-encoding
								code
									for(name in data) {
										urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));
									}
							opt02: XMLHttpRequest and FormData
								simpler way 
								FormData is write only. You cannot retrieve their contents.
								code
									var XHR = new XMLHttpRequest();
									var FD  = new FormData();
									// Push our data into our FormData object
									for(name in data) {
										FD.append(name, data[name]);
									}
									XHR.open('POST', 'https://example.com/cors.php');
									// Send our FormData object; HTTP headers are set automatically
									XHR.send(FD);
							opt03: FormData bound to a form element
								code
									var FD  = new FormData(form);
						Dealing with binary data
						A special case: sending filesSection
							Files are binary data
								special requirements for handling binary data
							enctype attirbute
								specify value of Content-Type HTTP header
								default: application/x-www-form-urlencoded
									means: this is form data that is encoded into URL parameters
								sending files needs three steps:
									set `method` to POST
									set `enctype` to multipart/form-data
										data will be split into multiple parts
										one for each file plus one for text data in form body
									include file picker widgets
				https://developer.mozilla.org/en-US/docs/Web/HTTP
					https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview
			post size limit id=g10756
				https://stackoverflow.com/questions/2880722/is-http-post-limitless
					no limit by POST method
					depends on the web server and browser
						no limit for multipart files upload
					ex:
						Firefox: 2GB
				https://jorge.fbarr.net/2011/04/03/nginx-error-413-request-entity-too-large/
					nginx.conf
					http {
						client_max_body_size 20M;
									post size limit <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10756>
				https://stackoverflow.com/questions/2880722/is-http-post-limitless
					no limit by POST method
					depends on the web server and browser
						no limit for multipart files upload
					ex:
						Firefox: 2GB
				https://jorge.fbarr.net/2011/04/03/nginx-error-413-request-entity-too-large/
					nginx.conf
					http {
						client_max_body_size 20M; 
	websocket
		use socket.io instead of websocket
		basic example
		run socketio-chat
			<url:file:///~/projects/stuff/js/socketio-chat/>
			run
				node index.js
			index.js
				app.get -> send index.html
				io.on { socket.on { io.emit(msg) } }
			dataflow
				client: form.submit -> socket.emit
				server: socket.on -> io.emit('id')
				broadcasted: socket.on('id') -> html.append
purescript
		psci multiline mode
		Partial
			The Partial type class
				https://github.com/purescript/purescript/wiki/The-Partial-type-class
				Why have a Partial type class?
					partial functions
						functions which don't handle every possible case of their inputs
				I just want to use a partial function, please
ruby
	rubymine
		jruby support
			jruby is supported only in intellij ultimate + ruby plugin
		running rspec tests
			https://www.jetbrains.com/ruby/help/using-rspec-in-ruby-projects.html
			Project Structure > .select folder for tests
			<url:file:///.choose directory > run > all rspec tests>
		irb (repl)
			Tools > run irb console
		how to import (require) code in irb
			normal just: 
				require "logstash/event"
			importing a file
				same, but the path should be relative to root
	Ruby in twenty minutes
			https://www.ruby-lang.org/en/documentation/quickstart/
	yield and blocks
			http://stackoverflow.com/questions/3066703/blocks-and-yields-in-ruby
		expl1
			methods may receive code block
				then they invoke block using yield function
			ex
				class Person
					@name
					def do_with_name
						yield( @name )
					end
				end
				person = Person.new("Oscar")
				person.do_with_name do |name|
					puts "hello #{name}"
				end
			ex in R
				f1 = function( fun )
					function( obj )
						print( "hello " %+% fun(obj) )
				do_with_name = function(obj)
					return( obj$name )
				f2 = f1( do_with_name )
				obj = list(name="ali")
				f2(obj)
				===
				f1(do_with_name)(obj)
			ex2
				do_with_name %>%
					f1 %>%
					list(k
	closures in ruby
			https://innig.net/software/ruby/closures-in-ruby
			blocks like closures
				closed wrt variables defined in the context they were created
				but we can not pass them
					yield only refers to the block passed 
					we cannot hold a block
			summary
				blocks refer to variables from defining context
					def thrice
						yield
					end
					x = 5
					thrice { x += 1}
				{..} and do..end equivalent
					thrice do 
						<url:file:///...>
					end
tmux id=g10599
	rfr: tmux  <url:file:///~/projects/study/otl/tmux.otl#r=g13078>
unix
		backtick ``
			https://unix.stackexchange.com/questions/27428/what-does-backquote-backtick-mean-in-commands
			not a quotation sign
			it is evaluated by shell before main command
			output is used instead
		.d extension in init.d and other directories
			.d in directory names typically indicates a directory containing many configuration files or scripts for a particular situation 
		memory usage of processes
			https://unix.stackexchange.com/questions/164653/actual-memory-usage-of-a-process
				ans1
					no single command gives actual memory usage
						because there is no such thing as actual memory usage
					memory page can be
						transient storage used by that process alone
						shared with other processes
						backed up by a disk file
						physical memory or swap
				ans2
					pmap source: /proc/[N]/maps
					virtual address space vs physical memory
						virtual address space
							not real
							a map of all memory allocated
							limit is same for each process (2-4 GB)
							not accumulated (multiple processes can only has 512 MB of physical memory)
							data is not stored from virtual address space
							kernel's job: manage the relation bw physical and virtual memory
							virtual space useful for:
								structure of a process
								relation to physical memory use
						amount of RAM actually used: physical memory counts
					pmap: info about virtual space
					pmap -x: Dirty column
						this is closed to real amount of memory
					top columns
						VIRT: VirtualSz: from virtual space
						RES: ResidentSz: from physical memory
linux variants
	linux variants
		ubuntu
			check version
				lsb_release -a
curl
		man curl
			download url to filename
				curl "{{URL}}" -o {{filename}}
			send form-encoded data
				curl --data {{name=bob}}
				POST request of type: application/x-www-form-urlencoded
			send json data
				curl -X POST -H "Content-Type: application/json" -d '{"user":"bob", "password": "ali"}' http://localhost:3000/login
			specify http method
				curl -X {{DELETE}} <url>
			head request
				curl --head <url>
			include extra header
				curl -H "{{X-Myheader: 123}}" <url>
		media type (MIME type / content type) id=g10155
			media type (MIME type / content type) <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10155>
			https://en.wikipedia.org/wiki/Media_type
				two-part identifier for file formats
				IANA (Internet Assigned Numbers Authority) manages
				defined in RFC2045
					for denoting type of email content and attachments
					name MIME: Multipurpose Internet Mail Extensions
					used by HTTP and HTML as well
				naming
					composed of
						type
						subtype
						optional params
					ex
						text/html; charset=UTF-8
							text: type
							html: subtype
							charset: optional parameter
					registered type names:
						application, audio, image, multipart, text, ...
					ex:
						application/javascript
						application/json
						application/x-www-form-urlencoded
						text/html
						text/csv
						image/png
					registration trees
						type/media_type_name[+suffix]
						vendor tree
							vnd.
		How are parameters sent in an HTTP POST request?
			https://stackoverflow.com/questions/14551194/how-are-parameters-sent-in-an-http-post-request#
			sent in request body
				in the format that content type specifies
					usually: application/x-www-form-urlencoded
					ex: request body contains string:
						parameter=value&also=another
			for file upload:
				multipart/form-data
			content is put after http header
				ex
					POST /path/script.cgi HTTP/1.0
					From: frog@jmarshall.com
					User-Agent: HTTPTool/1.0
					Content-Type: application/x-www-form-urlencoded
					Content-Length: 32
					# blank line
					home=Cosby&favorite+flavor=flies
				debug with Fiddler
			for json data:
				application/json
make
	Minimal make
		http://kbroman.org/minimal_make/
		intro
			most important tool for reproducible research is: GNU make
			consider: files associated with a book
				R scripts
				Latex files for main text
				BibTex for references
		A simple example
tools tools2
	anki anki2
		ref
			Import tsv files into anki <url:file:///~/projects/study/code/anki/study_anki.md#r=g12334>
			Import md files into anki  <url:file:///~/projects/study/code/anki/study_anki.md#r=g12355>
			/Users/mertnuhoglu/Library/Application Support/Anki2/ozgureminnuhoglu/collection.media/
			/Users/mertnuhoglu/Library/Application Support/Anki2/mertnuhoglu/collection.media/
			~/projects/study/code/anki/process_anki_make_image_flashcards.Rmd
		tablo türü anki kartları nasıl yapılır?
			ref: [(627) S03 - Anki Flashcards: 10 Tips for adding tables to your cards - YouTube](https://www.youtube.com/watch?v=0ybiIE2Cdbg)
			opt01: ekran görüntüsü olarak
			opt02: tablesgenerator.com
				html olarak ekle: Edit HTML
		netflix ve youtube gibi videolardan anki kartları oluşturma
			1. Language Reactor (chrome) ile cümleleri kaydet
			2. Export > Print 
			3. Bunları excele kopyala
			4. Anki'de tek tek bunları sesli olarak kaydet
				Mikrofon olarak dahili mikrofonu kullan. Ses kalitesi daha iyi.
				Sound: output kulaklık yap. Böylece bilgisayarın hoparlöründen kayıtlarını otomatik geri çalarken duymazsın.
		twitter maddelerinden anki kartları oluşturma
			1. SimpleNote kayıtlarını bir metin dosyasına aktar vim içinde
			2. ConvertToExcelFromMultilines
			3. Bunları excele kopyala
			4. tsv içine kopyala
				ConvertAnkiTsv
		custom shortcuts  id=g12392
			Tools > Add-ons > Custom Shortcuts > Config
		anki
			Basics: Objects
				Cards
					card = question + answer pair
				Decks
					deck = group of cards
					tree structure
						parent::child
				Notes & Fields
					ex: note
						French: Bojour
						English: Hello
						Page: 12
					we will generate two cards from this note:
						card1 
							Q: Bonjour
							A: Hello
							Page 12
						card2
							Q: Hello
							A: Bonjour
							Page 12
				Card Types
					blueprint: card type
					a type of note can have many card types
					when you create a note, anki will create a card for each card type
					each card type has two templates: Q and A
					ex1:
						Q: {{French}}
						A: {{English}}<br>
						Page #{{Page}}
					ex2:
						Q: {{English}}
						A: {{French}}<br>
						Page #{{Page}}
				Note Types
					tip: make a new note type for each topic
					ex: "French" note type
					ex: "Country" note type
					standard note types:
						Basic
						Basic (and reversed card)
							creates two cards for each text you enter
							front -> back and back -> front
						Cloze
							ex
								Canberra was founded in {{c1::1913}}.
								->
								Canberra was founded in [...].
							ex:
								{{c2::Canberra}} was founded in {{c1::1913}}.
								->
								Canberra was founded in [...].
								[...] was founded in 1913.
							ex:
								{{c1::Canberra}} was founded in {{c1::1913}}.
								->
								[...] was founded in [...].
							ex: hints
								C{{c1::anberra}} was founded in 1913.
							ex: hint 2
								{{c1::Canberra::city}} was founded in 1913.
								->
								[city] was founded in 1913.
				Collection
			Adding Material
				Downloading Shared Decks
				Adding Cards and Notes
			errors
				media files not synced
					desktop anki:
						Preferences > Network > Synchronize audio and images too
					android anki:
						settings > fetch media on sync
	audacity
			shortcuts
				http://vip.chowo.co.uk/wp-content/uploads/jaws/Audacity-2.1.0-Guide.html#moving-the-cursor
			moving cursor
				start/end    J/K
					start/end    Home/End
				short move    , .
					long move    shift , .
				very short    left/right
				during playback
					move current position    [ ]
				reading the position of cursor
				using selection toolbar
					activate selection toolbar    #F6
			naming a track
				Track > .Name > Name
			editing shortcuts
				Prefences > Keyboard
			play/record
				play/pause  space
				record  R
			zoom
				zoom in  !+f
				zoom out    -
			me
				mute    #u
				unmute/mute selected    u
				export selected  #e
				export multiple  #L
	balsamiq mockups id=g10710
		balsamiq mockups <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10710>
			shortcuts
				/ +		quick add
				+enter		add control
	csv csv2 excel2 tsv2 usv2
		usv unicode separated values id=g12924
			[SixArm/usv: USV: Unicode Separated Values](https://github.com/SixArm/usv)
		ultorg
		ModernCSV id=g12945
			ref:
				[CSV File Editor Application for Windows, Mac, and Linux - Modern CSV](https://www.moderncsv.com/)
			shortcuts
				rfr
					/Users/mertnuhoglu/Library/Application Support/Modern CSV/Modern CSV/Shortcuts (User).csv
				GoogleSheets uyumlu kısayollar için:
					Preferences > Edit Shortcuts
				Command Launcher,cmd+l|cmd+shift+p,cmd+e
				Edit Selected Cell,cmd+e|f2,shift+return
				Move Cell Contents Down,alt+down,ctrl+down
				Move Cell Contents Up,alt+up,ctrl+up
				Switch to Tab on the Left,cmd+pgup,alt+up
				Switch to Tab on the Right,cmd+pgdown,alt+down
		csvkit
			csvkit
				install
				csvcut
					print columns
						csvcut -n data.csv
	diff diff2  id=g13524
		delta id=g13525
			rfr
				[dandavison/delta: A syntax-highlighting pager for git, diff, and grep output](https://github.com/dandavison/delta)
				delta: diff tool <url:file:///~/prj/study/logbook/log_20221116.md#r=g13526>
	docker docker2 id=g10120
		rfr: docker <url:file:///~/projects/study/otl/docker.otl#r=g13071>
	elastic
			Getting Started Tutorial
				https://www.elastic.co/guide/en/elasticsearch/guide/current/_installing_elasticsearch.html
			installing marvel
				./bin/plugin -i elasticsearch/marvel/latest
			running
				./bin/elasticsearch
			test
				curl 'http://127.0.0.1:9200/?pretty'
			talking to es
				for java
					a. node client
					b. transport client
				for rest
					curl -X<VERB> '<PROTOCOL>://<HOST>/<PATH>?<QUERY_STRING>' -d '<BODY>'
						verb: get, post, put, head, delete
						protocol: http, https
						host
						port
						query_string: ?pretty
						body: json body
							if request needs one
					ex
						query: _count
						body: query: { match_all: {}}
					shorthand format
						GET /_count
						{
							'query': {
								'match_all': {}
							}
						}
					shorter format
						get /_count
						match_all: {}
			Elasticsearch in 5 minutes
				http://www.elasticsearchtutorial.com/elasticsearch-in-5-minutes.html
			running
				elasticsearch
			test
				http://localhost:9200
			indexing data
				put some data
					curl -XPUT 'http://127.0.0.1:9200/blog/user/dilbert' -d '{ "name" : "Dilbert Brown" }'
				result
					{"_index":"blog","_type":"user","_id":"3","_version":1,"created":true}
				verify operations
					curl -XGET 'http://127.0.0.1:9200/blog/user/dilbert?pretty=true'
					curl -XGET 'http://127.0.0.1:9200/blog/post/1?pretty=true'
				searching
					curl 'http://127.0.0.1:9200/blog/post/_search?q=user:dilbert&pretty=true' 
						find all blog posts by user dilbert
					q=-title:search
						all posts which don't contain term search
					q=+title:search%20-title:distributed
						+ search - distributed
					search by range on postDate
						curl -XGET 'http://localhost:9200/blog/_search?pretty=true' -d '
						{
								"query" : {
										"range" : {
												"postDate" : { "from" : "2011-12-10", "to" : "2011-12-12" }
										}
								}
						}'
	google docs / google drive / gdocs id=g10711
		ref: gdrive gdrive2 google drive <url:file:///~/projects/study/other/refcard.otl#r=g11799>
		google sheets2 gsheets
			ref: googlesheets google sheets sheets2 <url:file:///~/projects/study/other/refcard.otl#r=g12085>
		google docs / google drive / gdocs <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10711>
			spreadsheet
				shortcuts
					!/			quick command
	fzf: fuzzy file finder id=g10242
		rfr: fzf <url:file:///~/projects/study/otl/fzf.otl#r=g13074>
	grafik diyagram diagram tools diagram2 id=g14283
		rfr
			çizim grafik tasarım foto diyagram araçları <url:file:///~/projects/study/otl/cosx.otl#r=g13860>
		okso.app
		tldraw
		excalidraw
			whiteboard
			genel çizim aracı
		stately
		mermaid-js
		kumu
		forio
		C4 model
		yuml.me
		structurizr
		q.uiver.app
		orgpad.com
	lf: file manager (list files) lf2 id=g12347
		ref
			lf lf3  <url:file:///~/projects/study/code/lf_ranger_file_managers.otl#r=g12426>
	graphviz graphviz2 digraph dot
		[How do I make this graph acyclic, with graphviz, dot? - Stack Overflow](https://stackoverflow.com/questions/46525678/how-do-i-make-this-graph-acyclic-with-graphviz-dot)
			digraph G{
				START [label="START"]; 
				A1, A2, A3 [label="A"]; 
				B1, B2 [label="B"];  
				C1, C2 [label="C"];  
				END [label="END"];
				START-> A1 -> { B1 C1 } -> A2 -> { B2 C2 } -> A3 -> END
			}
	hammerspoon
		ref: ~/projects/study/code/study_hammerspoon.md
		opt01: bundleid
			osascript -e 'id of app "Microsoft Excel"'
		opt02: eğer bundleid yoksa pencere başlığının ismini kullan
			hs.window.find('Reveal'):focus()
		hs.application.nameForBundleID
		hs.application.launchOrFocusByBundleID
			hs.application.launchOrFocusByBundleID("com.apple.TextInputMenuAgent")
			hs.application.launchOrFocusByBundleID("com.jetbrains.datagrip")
			hs.application.launchOrFocusByBundleID("com.apple.TextInputSwitcher")
	hugo id=g10167
		rfr: hugo  <url:file:///~/projects/study/otl/hugo.otl#r=g13077>
	imagemagick
			split pdf into pages
				convert file.pdf image.png
			mogrify -format jpg *.pdf
			mogrify -format png *.pdf
			mogrify -format pct *.jpg
			convert -quality 100 -density 300x300 -resize 1280x720 index.pdf slide%03d.jpg
			mogrify -quality 100 -density 300x300 -resize 1280x720\! *.jpg 
				forces resize to fixed dimensions
			mogrify -quality 100 -density 300x300 -resize 1280x720\> *.jpg 
				only shrink, never enlarge: >
			use pdftk (better quality)
				http://unix.stackexchange.com/questions/14640/use-convert-to-grab-a-specific-page-from-a-pdf-file
			ghostscript
				gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dFirstPage=3 -dLastPage=5 -sOUTPUTFILE=input.3_5.pdf index.pdf
				convert *.png -gravity South -annotate 0 '%f' all.pdf
	intellij intellij2
			ref: ~/projects/study/otl/intellij.otl
			js javascript and ts typescript support
				install nodejs plugin
			live reload and hotswap
				LiveReload ve HotSwap <url:file:///~/Dropbox/mynotes/content/code/cjava/cjava.md#r=g10147>
				LiveReload
					bu css/html/js güncellemelerini otomatik yükler
					ayarlamasını yapamadım
					maven ile çalıştırınca oldu
				HotSwap - Spring Boot Devtools
					bu compile edilmiş class kodlarını otomatik yükler
					https://dzone.com/articles/spring-boot-application-live-reload-hot-swap-with
					Settings > Build Compiler > Compiler > Build project automatically
			keybindings osx
				^Space  code completion
				^+space
				#p  parameter info
				^n  new file/folder ...
			debugging js
				debug angularjs
					http://ignaciosuay.com/how-to-debug-angularjs-with-intellij/
					run > edit configurations > new > javascript debug
						url: http://localhost:8080
						Remote URLs:
							index.html = http://localhost:8080/index.html
	kafka
			run kafka server
				bin/zookeeper-server-start.sh config/zookeeper.properties
				bin/kafka-server-start.sh config/server.properties
				bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test
				bin/kafka-topics.sh --list --zookeeper localhost:2181
				bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
				bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning
				ex2
					bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic page_visits
					bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic page_visits --from-beginning
					bin/kafka-console-producer.sh --broker-list localhost:9092 --topic page_visits
				ex3
					bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic outlier
					bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic outlier --from-beginning
			rkafka using kafka in R
				library("rkafka")
				creating a producer
					producer1=rkafka.createProducer("127.0.0.1:9092")
				sending message
					rkafka.send(producer1,"test","127.0.0.1:9092","Testing")
				creating a consumer
					consumer1=rkafka.createConsumer("127.0.0.1:2181","test")
				reading messages
					rkafka.read()
						one by one
					rkafka.readPoll()
						in batch
				close them
					rkafka.closeProducer(producer1)
					rkafka.closeConsumer(consumer1)
				simple consumer (didnt understand yet)
					consumer2=rkafka.createSimpleConsumer("172.25.1.78","9092","10000","100000","test")
					rkafka.receiveFromSimpleConsumer(consumer2,"test","0","0","100")
					print(rkafka.readFromSimpleConsumer(consumer2))
					rkafka.closeSimpleConsumer(consumer2)
				consumer 2
					consumer1=rkafka.createConsumer("127.0.0.1:2181","test")
					print(rkafka.read(consumer1))
					print(rkafka.readPoll(consumer1))
				test arguments
	kitty terminal manager
		ref
			~/projects/study/code/study_kitty.otl
			~/projects/study/code/study_kitty.md
	libreoffice
		spreadsheets - calc
			Page Layout - Print Layout
				File > Print Preview > Adjust Margins
	logseq: logseq2 outliner notes manager pkm id=g13499
		rfr
			logseq <url:file:///~/projects/study/code/logseq.otl#r=g13070>
			shortcuts <url:file:///~/projects/study/code/logseq.otl#r=g12842>
			obsidian: pkm <url:file:///~/prj/study/otl/ccode.otl#r=g13498>
	mongo2 mongodb
		rfr: mongodb <url:file:///~/projects/study/otl/mongodb.otl#r=g13073>
	nginx id=ccd_0004
		rfr: nginx <url:file:///~/projects/study/otl/nginx.otl#r=g13072>
	obsidian: obsidian2 pkm (personal knowledge management) id=g13498
		rfr
			obsidian otl <url:file:///~/prj/study/code/obsidian.otl#r=g13496>
			shortcuts <url:file:///~/prj/study/code/obsidian.otl#r=g13497>
			logseq: <url:file:///~/prj/study/otl/ccode.otl#r=g13499>
	openshift rhcloud
		account
			openshift 2 > applications > .dev > source code: repo
				git clone <repo>
		deploy
			git commit
			git push
	osx osx2 macbook id=g13010
		rfr: osx macos  <url:file:///~/projects/study/otl/cosx.otl#r=g13852>
	pandoc pdf2
		[pdfgrep](https://pdfgrep.org/) id=g13046
	plocate: locate mdfind 
		alternative: locate mdfind 
		[plocate, a much faster locate](https://plocate.sesse.net/)
	pspg: pager for tables id=g12408
		ref
			~/projects/private_dotfiles/.psqlrc
		alternative to
			visidata
			less more
			psql
		[okbob/pspg: Unix pager (with very rich functionality) designed for work with tables. Designed for PostgreSQL, but MySQL is supported too. Works well with pgcli too. Can be used as CSV or TSV viewer too. It supports searching, selecting rows, columns, or block and export selected area to clipboard.](https://github.com/okbob/pspg)
		setup
			export PSQL_PAGER=pspg
			~/projects/private_dotfiles/.psqlrc
	ranger ranger2 file manager id=g12424
		ref
			ranger ranger3 <url:file:///~/projects/study/code/lf_ranger_file_managers.otl#r=g12425>
			Index <url:file:///~/projects/study/code/study_ranger.md#r=g11809>
			~/projects/private_dotfiles/.config/ranger/rc.conf
			~/.config/ranger/commands.py
			~/projects/study/code/lf_ranger_file_managers.otl
	rg ripgrep
		[phiresky/ripgrep-all: rga: ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, etc.](https://github.com/phiresky/ripgrep-all) id=g13048
	scim - spreadsheet on terminal
			basics
				in normal mode
					<text
						puts "text" left aligned
					\center
					>right
					=100
						enters number with =
					=@sum(b4:b6)
					gf4
						jump to F4 cell
					ei ea
						edit numeric cell
					Ei Ea
						edit text cell
					f up/dn
						change decimal places
				fill numbers
					:fill {range} {initial_number} {increment_number}
						Example:   :fill A0:A100 1 0.25
				decimal precision numbers
					f+ , fk , f-UP:         Change cell format: Increment decimal precision.
					f- , fj , f-DOWN:       Change cell format: Decrement decimal precision.
					f< , fh , f-LEFT:       Change cell format: Decrement column width.
					f> , fl , f-RIGHT:      Change cell format: Increment column width.
			formulas
				@sum
				@prod
			Quick tools #1 sc The spreadsheet calculator-LFWD5slyVfc.mp4
	screenflow
			moving
				forward one second    +right
			adding multiple media
				1. # right
				2. select media
				3. double click
			moving scrubber
				move one sec forward/backward   +rg/lf    
				move to next clip     '
				move to prev clip     ;
			marker
				insert marker at scrubber     `
				delete marker         shift -
				next marker     + up
				prev marker     + dn
			trimming
				trim front of selected clip to scrubber   w
				trim end    e
			selection
				insert in   i
				insert out  o
	simplenote simplenote2
		ref
			/Users/mertnuhoglu/gdrive/mynotes/nx/simplenote/
		export simplenote notes
			https://simplenote.com/help/
				Web > Settings > Tools > Export zip
	sox
			duration/length of audio
				soxi -D file.mp3
				globbing
					soxi -D *.aiff
				sum all files
					soxi -D *.aiff | paste -sd+ - | bc
			manipulating audio files
				merge audio files <url:#r=dat_064>
	teams
		^+m		mute
		^+o		video
	tldr
	taeldeer: tldr cheatsheets
		alternative: tldr cheat
		[dbrgn/tealdeer: A very fast implementation of tldr in Rust.](https://github.com/dbrgn/tealdeer)
	twitter twitter2
		twitter shortcuts kybd id=g12877
			ref: [Every Twitter Shortcut and Term That You Need to Know](https://www.makeuseof.com/twitter-shortcut-terms-cheat-sheet/)
			| ? | shortcut list |
			| gb | goto bookmarks |
			| b | bookmark this |
		dewey: twitter bookmarks archiver (arşivleyici) id=g12878
			https://getdewey.co/account/
				> Grab My Bookmarks
	ugrep - search text id=g12409
		[Genivia/ugrep: ultra fast grep with interactive query UI and fuzzy search](https://github.com/Genivia/ugrep#install)
		alternative to: rg ripgrep grep
		features
			pdf docx support
			interactive
			fuzzy search
			filter by filename extensions
			output in csv
	vd visidata spreadsheet vd2
		ref
			~/projects/study/code/study_visidata.md
			refcard visidata <url:file:///~/projects/study/code/study_visidata.md#r=g11578>
		examples
			vd https://en.wikipedia.org/wiki/ISO_3166-1
				scrapes data in html web pages 
		shortcuts id=g12574
			v | multiline mode
		visidata sqlite id=g12923
			vd ~/projects/study/r/shiny/ex/shiny_database/persistent-data-storage/data/responses.db
	vlc
			subscribe to podcast
				window > playlist > podcasts > subscribe
			play youtube playlist
				http://www.makeuseof.com/tag/watch-entire-youtube-playlists-in-vlc-heres-how/
			record streaming video
				https://confluence.bethel.edu/display/TLT/Recording+a+Network+Stream+with+VLC+Player
					File > Open Network Stream 
						> .Streaming/Saving +
						> Settings
							> .File: ...
							Encapsulation method: ..
	webapp2 webapps id=g13265
		google2 google id=g13266
			"timer 5 minutes" | 5 dakikalık bir zaman sayacı çıkartır. sonunda sesli uyarı verir.
	webfaction id=g10566
		webfaction
			webfaction <url:file:///~/Dropbox/mynotes/content/code/ccode.md#r=g10566>
			ref
				## 1-201 webfaction <url:file:///~/Dropbox/mynotes/nx/keynote/kodlar/webapps.md#r=g10565>
				webfaction @cnn <url:file:///~/Dropbox/mynotes/nx/nsettings.md#r=g10577>
			redirection of subdomains
				redirect wf to digitalocean
					admin | domains | .choose domain
					hosting = external
						add ip address: 207.154.192.228
					save
				test
					ping subdomain.x.com
			ssh connection
				ssh keys
					https://docs.webfaction.com/user-guide/access.html?highlight=ssh
					steps
						local osx
							scp ~/.ssh/id_rsa.pub mertnuhoglu@mertnuhoglu.webfactional.com:/home/mertnuhoglu/
						ssh wf
							mv ~/id_rsa.pub ~/.ssh/
							cd .ssh
							cat id_rsa.pub >> authorized_keys
							chmod 600 authorized_keys
							chmod 700 ~/.ssh
							chmod go-w $HOME
			migrating server
				https://docs.webfaction.com/user-guide/moving.html
					# get file list (osx)
					rsync -nPaz mertnuhoglu@mertnuhoglu.webfactional.com:/home/mertnuhoglu/ ~/projects
					rsync -nPaz mertnuhoglu@mertnuhoglu.webfactional.com:/home/mertnuhoglu/files/backup ~/projects
					# get files 
					rsync -Paz mertnuhoglu@mertnuhoglu.webfactional.com:/home/mertnuhoglu/files/backup ~/projects/backup
				put backup files here:
					webfaction @cnn <url:file:///~/Dropbox/mynotes/nx/nsettings.md#r=g10577>
	word2vec
			how does it work
				input: text corpus
				output: word vectors
				study
					find closest words
						distance tool
					find linguistic regularities
						ex
							vector('Paris') - vector('France') + vector('Italy')
								≅ vector('Rome')
							vector('king') - vector('man') +vector('woman')
								≅ vector('queen')
					from words to phrases
	youtrack youtrack2 id=g12338
		ref
			YouTrack Documentation <url:file:///~/projects/study/code/youtrack.otl#r=art_0005>
	zoom2 zoom
		+#a	audio mute/unmute
		+#v	video toggle
		space	toggle audio
		+#s	screen sharing
		+#p	recording
		^p	prev page of gallery
		^n	next page of galery
		.#u	participants
		!y	raise hand
		+#w	toggle gallery view
topics
	3D Design
			tutorials
				Blender for Hackers - 3D modeling is just like using VIM
					https://learntemail.sam.today/blog/blender-for-hackers-3d-modeling-is-just-like-using-vim/
					çok kolay ve vim tarzı bir anlatım
	authentication
			token authentication for spa
				https://stormpath.com/blog/token-auth-spa
					single page applications: the authentication problem
						spa -> rest api
						rest api -> how to open api in a secure way?
					before tokens, the cookie session
						store cookie in the browser
							after login -> cookie contains id of the session in the server
							additional reqs:
								https only cookies that cannot be read by js
								implement csrf mitigation strategy
					json web tokens (jwt)
						oauth 2.0 spec + jwt specification
						jwt: reliable
							structured way to declare users and their access rights
							scopes: powerful and simple
							refresh tokens: confusing and useless
							token ex: "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk..."
								base64 encoded string
								3 sections:
									header: describes token
									payload
									signature hash: to verify integrity of the token (with secret key)
								decoded payload:
									"sub": "users/TzMUocMF4p",
									"name": "Robert Token Man",
									"scope": "self groups/admins",
									"exp": "1300819380"
								information:
									who that user is + uri 
									what can user access (scope)
									when token expires
								claim: these declarations are called
							tokens are given to user after they present credentials (username+pass or api keys or other tokens)
					why jwt is great for spa
						spa has many views:
							logged in, logged out, restricted
							it is about access control
					how to use jwt securely
						if tokens stolen, all bets are off
						solutions:
							sign tokens with keys available only to authentication service
								verify token is signed with secret key
							encrypt tokens
							never transmit tokens over non-https
							stoke jwt in https-only cookies
								prevents xss attacks
					token expiration and revocation
						oauth: two token approach
							short-lived access token 
							with long-lived refresh token to get access token
							convoluted solution
	datascience
		rfr: datascience <url:file:///~/projects/study/otl/datascience.otl#r=g13076>
	financial budget planning - ibm cognos tm1
			olap cubes
				cube = map 
				dimension = key
				multi-dimensional = multiple keys to one value
	functional programming
			distinguishing fold left from fold right
				How do you know when to use fold-left and when to use fold-right?
					http://stackoverflow.com/questions/1446419/how-do-you-know-when-to-use-fold-left-and-when-to-use-fold-right
					convert a fold into an infix operator notation
						ex
							fold x [A, B, C]
						if left-associative, it becomes:
							((A x B) x C )
							natural order
						if right-associative, it becomes:
							(A x (B x c))
							reverse order
						ex: cons-operator
							foldr (:) [] [1, 2, 3] 
								= 1 : (2 : (3 : []))
								= 1 : 2 : 3 : []
								= [1, 2, 3]
						in general most operators are left-associative
					2. answer:
						left: it is like an accumulator as in a tail-recursive iteration
							((1 + 2) + 3)
							1 stack frame is sufficient
						right: traverses until the base then builds up the result from there
							(1 + (2 + 3))
							needs to preserve n-1 stack frames
						rule of thumb:
							if no specific associativity: choose left
				Understanding fold-left and fold-right in Scheme
					http://stackoverflow.com/questions/32686736/understanding-fold-left-and-fold-right-in-scheme
					1. answer:
						both reduces a list 
						right: keeps the order
						left: reverses the order of the list while applied
				Operator Associativity - wikipedia
					https://en.wikipedia.org/wiki/Operator_associativity
					operators may be associative
						= operations can be grouped arbitrarily
					left associative
						= operations are grouped from the left
					exponentiation: right associative
				Associative property - wikipedia
					https://en.wikipedia.org/wiki/Associative_property
					word root: grouping
					changing order of operations doesn't matter
						2 x (3 x 4) = (2 x 3) x 4
					commutativity: changing the order of arguments
						a x b = b x a
					associative operations are abundant
						many algebraic structures require their binary operations to be associative
					many important operations are non-associative:
						subtraction, exponentiation
				cons operator - wikipedia 
					https://en.wikipedia.org/wiki/Cons
					word root: construct list
						oop: constructor
						algebraic data type system: constructor function
					jargon:
						to cons x onto y
						= (cons x y)
						left half: car (content of address register)
						right half: cdr (condent of decrement register)
					haskell: `:`
						adds an element to the beginning of a list
						prepend
				What is tail recursion? Why is it so bad? - quora
					https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad
					tail recursion:
						a kind of recursion
						where recursive call is the last thing in the function
						function does not do anything after recursing
					benefit:
						no need to consume stack space
						pass result of recursive call directly without waiting
						difference from normal function:
							compiler has to have a stack frame
							so that he comes back to it after 
	SSL/TLS certificates id=ccd_0003
		rfr: SSL/TLS certificates  <url:file:///~/projects/study/otl/nginx.otl#r=g13075>
	startups
			
			reviews of software services from startup founders: founderkit
				https://founderkit.com
	Serverless serverless2 id=g12925
		uptash: serverless for redis and kafka
		neon: serverless for postgres
		serverless
			articles
				Serverless Patterns and Anti-patterns - Joe Emison id=g10713
					Serverless Patterns and Anti-patterns - Joe Emison <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10713>
					https://www.youtube.com/watch?v=U0X0j9mt8gA
					what why how
						serverless means: 
							no server ops (management)
							not my uptime
						why
							reduction of dependencies
								ex: 
									backend to frontend
									devops to backend
									developers to system admins
								very independent developers
							code is liability
								code is not asset
								because you have to maintain it
							opinionated microservices
								martin fowler: 
									don't start with a microservices architecture
									because you are going to draw them in wrong places
								if you do serverless
									then you get correct microservices by default
							everybody gets to the same production environment
						how
							developer identities
								only thing that are hard has to do with people
								masculine attitude: backend is more important than frontend
								due to identity like: stuff i do is cool
								rather than: i make value for the customer
					example apps
						fuel sqc
							monitoring fuel
								this is 85 octane benzine
							they need to watch machines
							architecture
								angular app
								backend:
									firebase: database as a service
										uses google cloud functions
											ex: send email by db trigger
									or parse
								exports the data into google sheets using google apps scripts
						spaceful
							commercial real estate tours
							3 mo implementation
							architecture
								angular, react
									auth0
									firebase
									cloudinary: uploaded images go to moderation queue
									auth0 webtask: proxying your request
										docraptor: pdf generation: print as a service
									segment: emails, analytics
						commercial search
							zillow for commercial real estate
							architecture
								angular, react
									netlify: reverse proxy
										wp engine
									firebase: auth, db
									algolia: search 
	Streaming regressions and streaming recommendation engines. Examples can be found in the documentation
				?trainMOA.MOA_regressor
				?trainMOA.MOA_recommender    
			summary
				data -> data stream -> 
				model = HoeffdingTree
				trainMOA( data, model, formula )
				predict( model, data )
				table( results, data$labels )
		RMOA reference
			https://cran.r-project.org/web/packages/RMOA/RMOA.pdf
			functions
				datastream
					datastream_file
					datastream_dataframe
					datastream_ffdf
				datastream_dataframe
					x = datastream_dataframe(data = iris)
					x$get_points(10)
				datastream_ffdf
					irisff = as.ffdf(factorise(iris))
					x = datastream_ffdf(data = irisff)
				datastream_file
					mydata = iris
					mydata$Species[2:3] = NA
					myfile = tempfile()
					write.csv(iris, file = myfile, row.names=F, na = "")
					x = datastream_csv(file = myfile, na.strings = "")
					x$get_points(10)
				factorise
				MOAattributes
				MOAoptions
	rest apis
			openapi
				https://www.openapis.org/about
					goal: standardizing descriptions of rest apis
					OpenAPI Initiative OAI
						governed under Linux Foundation
					based on Swagger Specification
			HATEOAS: Hypertext As The Engine Of Application State
				https://stackoverflow.com/questions/717851/can-someone-explain-hypertext-as-engine-of-application-state-in-simple-terms
				http://restcookbook.com/Basics/hateoas/
					means: hypertext should be used to find your way through the API 
					ex
						GET /account/12345 HTTP/1.1
						HTTP/1.1 200 OK
						<?xml version="1.0"?>
						<account>
								<account_number>12345</account_number>
								<balance currency="usd">100.00</balance>
								<link rel="deposit" href="/account/12345/deposit" />
								<link rel="withdraw" href="/account/12345/withdraw" />
								<link rel="transfer" href="/account/12345/transfer" />
								<link rel="close" href="/account/12345/close" />
						</account>
					explain:
						we have 100 dollars
						we see 4 options
							deposit money
							withdraw money
							... 
					ex
						<account>
								<account_number>12345</account_number>
								<balance currency="usd">-25.00</balance>
								<link rel="deposit" href="/account/12345/deposit" />
						</account>
					explain
						we are -25 dollars
						we have 1 option:
							deposit money
				http://barelyenough.org/blog/2007/05/hypermedia-as-the-engine-of-application-state/
					application is a state machine
						every page = a state
						links = possible transitions from current state
				https://begriffs.com/posts/2014-03-06-beyond-http-header-links.html
					ex: pagination link headers
						Request
							GET /resource
							Range-Unit: items
							Range: 0-24
						Response
							Status: 206
							Range-Unit: items
							Content-Range: 0-24/1000000
	ui design
		ui component names id=g12339
			main navigation at top
			Projects link
			set of options
				Search and Filter options
				filter current list
				use this feature to find issues
			search bar
				search bar has two controls: Search Context list and Search Box
			sidebar
				sidebar gives you quick access
				to configure the list of saved searches ...
			Single Issue View
			other concepts
				permission
				visibility of options
	video production
			software tools
					gifcurry: overlay text on animated gifs from video files
						https://github.com/lettier/gifcurry
					videoscribe
							explainer videos
					powtoon
					go animate
					toontastic
	zoxide: z autojump
		alternative: z autojump
		[ajeetdsouza/zoxide: A smarter cd command. Supports all major shells.](https://github.com/ajeetdsouza/zoxide)
android android2 id=g12841
	use cases
		video ekitapları takip etmek
			New Pipe ile videoyu lokaline indir
			Total Commander ile video dosyasını Ana Sayfana ekle (Add to Home Screen)
			Videoyu tıklayarak KM Player ile aç
			KM Player ile videonun içinde Bookmarklar koy
		youtube subscription listesini New Pipe ile takip etmek
			Google > Takeout Data > Youtube > .Subscriptions
				zip dosyayı indir
				Bunu açıp csv dosyasını koy
			New Pipe > Import > subscriptions.csv
		youtube Playlistlerini New Pipe ile takip etmek
			Youtube > Playlist > .Unlisted
				> Share > Copy Link
			New Pipe > Paste Link
unclassified
	fd:- dosya ismi aramalarında fzf yerine fd kullan id=g12656:
		fzf fd'ye göre çok yavaş kalıyor
		fd --hidden ile tüm gizli klasörler de dahil tüm dosyaların isimlerini aratabilirsin
	unclassified
		https://repl.it/site/blog/multi
		books
			Data Analytics Made Accessible
			Practical Foundations of Mathematics Paul Taylor
				http://www.paultaylor.eu/~pt/prafm/html/index.html
			pragmatic
				Exercises for Programmers
				Customer Requirements
				Mazes for Programmers
				Predicting the Unpredictable Pragmatic Approaches to Estimating Project Schedule or Cost
				Behind Closed Doors
		slack
			slack-term
				cli tool for slack
				config
					~/slack-term.json
				slack-token 
		Maker products marketplace: tindie.com
		hackaday.io: maker projeleri sosyal ağı
		HackerRank: challenges for hackers
			https://www.hackerrank.com/challenges/tutorial-intro
			eğer problemleri çözersen seni işverenlerle görüştürüyorlar
		Diagrams - vector dsl in haskell
			http://projects.haskell.org/diagrams/
		The Curse of the Excluded Middle "Mostly functional" programming does not work.
			Erik Meijer
			http://queue.acm.org/detail.cfm?id=2611829
		peter norvig code puzzles and solutions
			http://nbviewer.jupyter.org/url/norvig.com/ipython/Advent%20of%20Code.ipynb
		https://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming
			examples in imperative and functional style
		https://gobyexample.com
			go by example
		apps
			scan uygulamaları
				http://lifehacker.com/five-best-mobile-document-scanning-apps-1691417781
				http://www.howtogeek.com/166610/who-needs-a-scanner-scan-a-document-to-pdf-with-your-android-phone/
		books
			Data Analysis for the Life Sciences 
				leanpub
			Social Architecture book
				https://www.gitbook.com/book/hintjens/social-architecture/details
			Hintjens books  
				http://hintjens.com/books
			Github Cheat Sheet
				https://www.gitbook.com/book/snowdream86/github-cheat-sheet/details
		data analysis
			https://github.com/Quartz/bad-data-guide
			csvconf
				https://gist.github.com/philandstuff/496b0a4872b89da5bb33a245171d789a
				https://librecatproject.wordpress.com/2014/12/01/day-1-getting-catmandu/
				https://jorol.github.io/2016-csvconf-catmandu/
				https://richfitz.github.io/jiffy/
		tools
			json
				jsonbrowse.com: online browser for json
			Viz.js — Graphviz in your browser. 
			https://code.hackmit.org
				tools for hackathons
				jury app, mentor app
			https://github.com/simeji/jid
				json incremental digger
				very useful tool to filter/query json docs
			https://hyper.is/
				js temelli bir terminal app
				çok kolay konfigüre edilebilir  
			https://github.com/nathancahill/anycomplete
				autocomplete for all apps
				thesaurus gibi işlev görür
				hammerspoon temelli
			https://kapeli.com/dash
				dokümantasyon takip app
			http://pencil.evolus.vn/
				js temelli bir gui çizim editörü
			https://github.com/mas-cli/mas
				mac appstore cli
			https://github.com/jaspervdj/patat
				terminal based presentations
			https://github.com/ok-borg/borg?utm_content=bufferefcfa&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
				terminal based search engine for bash commands
			https://github.com/gravitational/teleconsole?utm_content=buffer87f6d&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
				remote terminal connection to any computer 
			https://github.com/christabor/flask_jsondash?utm_content=bufferf684e&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
				dashboard app for any api
			http://datasciencemasters.org/?utm_content=buffer5774b&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
				curriculum for data science
			httpstat — curl statistics made simple http://chlg.co/2bGamiU 
			Mojibar – 🍊 Emoji searcher but as a menubar app. http://chlg.co/2b01kwc
			Thyme – Automatically track which applications you use and for how long. http://chlg.co/2blN5Yn 
			Librevault - p2p, decentralized and open source file sync
			Checkup — distributed, self-hosted health checks and status pages http://chlg.co/2aI0fdv 
			gron makes JSON more greppable http://chlg.co/2asQEtd 
			Jargon from the functional programming world in simple terms! http://git.io/fp-jargons
			m-cli — helps you programmatically administer macOS
			It brings you Slack-style :emoji: keyboard shortcuts https://github.com/warpling/Macmoji 
			Write your next presentation in #Markdown with Marp http://chlg.co/29wMHkN 
			"ES6 for Humans" looks like a great starting point to level up your JavaScript skills from ES5 to ES6
			Atmo – a server-side power tool (UI) for quickly mocking #API endpoints http://chlg.co/29hECiR 
			TellForm – an #OSS alternative to TypeForm or Google Forms: http://chlg.co/29NYv2B 
			"You should have to pass a quiz that proves you actually read an article before you can comment / share it." readsure
			A game designed to teach JavaScript and artificial intelligence in a fun, interactive way. http://chlg.co/298EJBj warrior.js
			https://github.com/thechangelog/ping/issues?utm_content=buffer81c94&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
				podcast içeriği önerilerini github issue'ları olarak almak
			Neodoc – Beautiful, handcrafted commandline interfaces for #NodeJS http://chlg.co/294A7rT 
			All of @github’s #opensource code (2.8M+ repos) is now in BigQuery. Start analyzing: http://goo.gl/0yJMyr 
			https://sourcegraph.com/
				navigate any code
			emoj — Find relevant emojis from text on the command-line 😮 ✨ 🙌 🐴 💥 🙈 http://chlg.co/28RhzAB 
			gitalias: useful git aliases
			lemonade-stand: https://t.co/v1TOattOdV financial support for oss projects
			VisualAlchemist — A web-based database diagramming and automation tool http://chlg.co/1UW4VuO 
			Mailtrain – a self-hosted email newsletter app built on top of #Node http://chlg.co/1rpM2J8 
			https://github.com/fstab/grok_exporter
				Grok is a tool to parse crappy unstructured log data into something structured and queryable. Grok is heavily used in Logstash to provide log data as input for ElasticSearch.
			A complete daily plan for studying to become a machine learning engineer (Insta-🔖) https://t.co/HfjAhx67ve
			Cayley — a db inspired by the graph database behind Freebase and Google's Knowledge Graph. https://t.co/6jgUxOg33j
			People are starting to build things on top of #IPFS! Check out Orbit, a distributed, peer-to-peer chat app https://t.co/PKMLjLL1jb
			Mega Boilerplate — handcrafted starter projects, optimized for simplicity and ease of use http://chlg.co/1tbs8mt 
			gvar(1) -- bash: display, set, or remove global variables. http://arturoherrero.github.io/gvar/g…
				https://github.com/arturoherrero/gvar?utm_content=buffer7ca40&utm_medium=twitter&utm_source=changelog&utm_campaign=buffer
			The simplest, fastest way to get business intelligence and analytics to everyone in your company 😋 http://metabase.com
			movtogif: CLI simplifies converting mov/mp4 files to high quality animated GIFs http://chlg.co/28LUPw3 
			grok: Grok is a tool to parse crappy unstructured log data into something structured and queryable. Grok is heavily used in Logstash to provide log data as input for ElasticSearch.
			https://github.com/dbohdan/structured-text-tools
			convert excel to csv on terminal
				pip install xlsx2csv
				xlsx2csv excel_file out_file
			yuml
				Terminalden Yuml Kullanımı
					https://github.com/wandernauta/yuml
					run
						echo "[This]-[That]" | ./yuml -s nofunky -o diagram.png
					options
						-i  read file
						-o  store output
						-f  format png, pdf, jpg, svg
						-t  diagram type: class, activity, usecase
						-s  diagram style: scruffy, plain, nofunky
						--dir direction: LR, RL, TD
						--scale percentage
						-v  debug info
					run full
						yuml -i -o -f png -t class -s plain --dir 
		http://www.cis.upenn.edu/~bcpierce/tapl/main.html
			Types and Programming Languages
		https://github.com/askn/crystal-by-example
		game
			https://www.codingame.com/
				programlayarak oyun oynama
			http://www.bootstrapworld.org/
				algebraic game programming
			http://treksit.com/
				game to learn graph theory
		unix
			https://www.learnenough.com/command-line-tutorial
		learning
			http://exercism.io/
				exercises for programming languages
		https://www.edx.org/course/beauty-joy-computing-cs-principles-part-uc-berkeleyx-bjc-1x
		http://www.lambda.cd/
			pipelines for build server
		https://www.getsync.com/
		programming
			graphql
				https://www.compose.com/articles/postgraphql-postgresql-meets-graphql/
			purescript
				https://github.com/paf31/24-days-of-purescript-2016
					book for purescript
			thoughtworks technology radar
			http://martinfowler.com/articles/command-line-google.html
			'Coder Decoder - Functional Programmer Lingo Explained, with Pictures' by Katie Miller-uwrCQmpZ8Ts.mp
		category theory - fp
			https://manning.com/books/design-for-the-mind
			https://manning.com/books/reactive-data-handling
			https://www.manning.com/books/functional-programming-in-javascript
			https://manning.com/books/learn-haskell
			<url:file:///~/Movies/youtube/wadler/Category Theory, The essence of interface-based design - Erik Meijer-JMP6gI5mLHc.mp4>
			http://debasishg.blogspot.com/2012/07/does-category-theory-make-you-better.html
			http://debasishg.blogspot.com/2014/03/functional-patterns-in-domain-modeling.html
			Philip Wadler - Everything old is new again - Quoted domain specific languages - Curry On-FiflFiZ6pPI.mp4
			Immutable JavaScript - You can't change this-wA98Coal4jk.mp4
			Category Theory, The essence of interface-based design - Erik Meijer-JMP6gI5mLHc.mp4
			Spreadsheets for developers by Felienne Hermans-0CKru5d4GPk.mp4
		tools 
			opensource.guide
				https://github.com/github/opensource.guide
				community guides for open source authors
			OnlinePythonTutor
				https://github.com/pgbovine/OnlinePythonTutor
				visualize python, java, js in browser
			csvtotable
				https://github.com/vividvilla/csvtotable
				cli to convert CSV files to searchable and sortable HTML table
				ex
				Installation
					pip install --upgrade csvtotable
				Get started
					csvtotable --help
				Convert data.csv file to data.html file
					csvtotable data.csv data.html
				Open output file in a web browser instead of writing to a file
					csvtotable data.csv --serve
			audreyr/cookiecutter
				https://github.com/audreyr/cookiecutter
				A command-line utility that creates projects from cookiecutters (project templates), 
				e.g. creating a Python package project from a Python package project template.
			toddmotto/public-apis
				https://github.com/toddmotto/public-apis
				collective list of public JSON APIs for use in web development
			learnxinyminutes-docs
				https://github.com/adambard/learnxinyminutes-docs
				learn programming languages with examples in actual code
				ex
					// ... or using the dot syntax, provided the key is a valid identifier.
					myObj.myKey; // = "myValue"
			https://asciinema.org/
				screencasting tool for terminal
			https://github.com/jreybert/vimagit
				vim git client, very useful
				ex
					S: stage block
					CC: commit block
			Google Translate plugin for chrome
				çift tıklayarak kelimelerin karşılıklarını bulur
			http://kk.org/cooltools/tag/cool-tools-show/
				podcast
			cooltools: chris anderson
				usician
				3d printer
		ux
			https://www.oreilly.com/learning/fundamentals-of-mapping-experiences
		linux
			Linux Fundamentals, Paul Cobbaut
		datalog
			learndatalogtoday.com
				extensible data notation (edn)
					similar to json plus
						user defined value types
						more base types
						subset of clojure data
					consists of
						numbers
						strings
						keywords: :kw
						symbols: max
						vectors: [1 2 3]
						lists: (+ 1 2 3)
						instants: #inst
						more
					ex: find all movie titles
						[:find ?title
						:where
						[_ :movie/title ?title]]
					the query is a vector with 4 elements
						keyword :find
						symbol ?title
						keyword :where
						vector [_ :movie/title ?title]
		machine learning
			youtube: nando de freitas
			videolectures.net
			goodwell
			bishop
		fp
			covariant and contravariant
				https://www.johndcook.com/blog/2013/02/28/covariant-and-contravariant/
				Nowadays such situations are always distinguished by calling the things which go in the same direction “covariant” and the things which go in the opposite direction “contravariant.”
					
			Philip Wadler on Functional Programming
				https://www.infoq.com/interviews/wadler-functional-programming/
		multimedia
			ProCreate - ipad üzerinde video aracı
				çok iyi
				yaptığın tüm işlemleri kaydediyor
				https://www.youtube.com/watch?v=G78NXyHaRok
			Kendi ipad stylus kalemini yap
				https://www.youtube.com/watch?v=2XKJ9bF0GVk
					kulak çöpü + alüminyum + su + kalem
				https://www.youtube.com/watch?v=4tf2lm5RgCU
					metalik bir kalemin ucuna pamuk sıkıştır
					
			Infinite-Quality Abstract Art and Animations with Primitive
				http://minimaxir.com/2016/12/primitive/
				herhangi bir resmi soyut bir resim ve animasyon haline getiriyor
				açık kaynak
		python
			conda
				Conda: Myths and Misconceptions
					https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/
					conda sadece python değil, başka yazılımları da yönetir
					conda ikiye ayrılır:
						conda: package manager
						anaconda/miniconda: distribution
					pip: python paketlerini yönetir, conda pip'i kullanır altta
				http://deeplearning.lipingyang.org/2018/12/23/anaconda-vs-miniconda-vs-virtualenv/
					conda: replaces pip + virtualenv
						pip: package manager
						virtualenv: environment manager
						conda: both
					conda:
						handles library deps outside of python packages as well
						creates a virtual environment too
					Anaconda + Miniconda
						use conda as package manager
						miniconda: no pre-installed packages like anaconda
		nodered: flow based programming for iot and web
			https://nodered.org
		cypress: web ui testing
			https://www.cypress.io
		Building JavaScript and mobile_native Clients for Token-based Architectures-eF2myGRT8bo.mp4
			token based security
				one token for all API clients
					mobile, native, web, 3rd party
			token security as a service
			first protocol: who is the user
				uses security token service
				OpenID Connect: authenticates user
			2. protocol: for talking to API
				delegate the identity of user to API
				OAuth 2.0
			flow  
				1. client aunthenticates, establishes session with token service
				2. token service returns identity token, access token
				3. clients process response, validate identity token
				4. client send access token to API
			login ui
				opt1: local login ui in client
					benefit:
						you have control of login page
				opt2: redirect to server rendered login page
					benefit:
						single sign on
						3rd party apps won't get password 
					better in general
					client apps use that as a service
			why tokens instead of cookies
				in spa there is no server side app
				apis don't use cookies
				cookies are only for browser based apps
				csrf security issue
			discovery
				1. get discovery document
					it contains all key information such as
						authorization_endpoint
						token_endpoint
				2. client redirects to openid provider (op)
				3. user authenticates
				4. op returns to client
					id token
				5. client validates id token
			id token
				it is returned as hash fragment in url #lekalmik
				format is JSON web token (jwt)
					header
					claims
					signature
			openid client library: oidcclient
		Migrating to Serverless - an experience report - Gojko Adzic-i2gEbw_jzfY.mp4
			from heroku to amazon lambda
			1/3 less code
				no authentication, no deployment code etc
			no need to provision servers for scaling
			tool
				npm install claudia-api-builder -S
				npm install claudia -D
				vim api.js
					const API = require('claudia-api-builder'),
						api = new API();
					module.exports = api;
					api.get('/hello', () => "hi there!");
				vim package.json
					"scripts":
						"create": "claudia create --region us-east-1 --api-module api",
				npm run create
				# "url": "https://...amazonaws.com/latest"
			using
				$ curl https://...amazonaws.com/latest
				"hi there!"
			infrastructure and monitoring is ready
				logging
				invocations
				authentication
				recovery
				versioning
					20 different deployments cost the same as 1 deployment
					very useful for full a/b testing with different api services
				scaling
			update
				package.json
					"update": ".."
				npm update
					# version: 2
					# url: https:.../dev
			embrace platform
				gatekeeper -> distributed authentication
					authentication, senin sunucun tarafından yapılmak zorunda değil
					doğrudan amazon cognito ile yapılabilir
					böylece örneğin:
						kullanıcı pdf dosyası yükler
						authentication tarafını amazon yapar
						istediği zaman url ile indirir
						senin sunucuların hiç çalışmaz bile
				orchestration -> client or workflow engines
			don't design for stateless, design for share-nothing
		Object-Oriented Programming is Bad-QM1iUe6IofM.mp4
			most important programming video you will ever watch
				%5 will say oo is not important
				%25 it has some virtues and some benefits
				i say: oo is definitively not relevant for any problem
				that is contrary to common knowledge
			procedural code is better
				even when not functional
				procedural & imperative (default)
				procedural & functional (minimize state)
				oo & imperative (segregate state)
			not part of discussion
				inheritance irrelevant
					be very careful or not use at all
				polymorphism is not exclusively oop
			core: encapsulation does not work
				that is the essence of oop but it doesn't work
			why does oop dominate industry?
				oop is something that programmers did to themselves
				java is one main reason
				before java windows app programming was very difficult
					encrypted libraries
				people liked: subject.verb(object)
					ide provides code completion, simplifies programming
				gui programming: very compatible for objects
					components = widgets 
			unit of code abstraction larger than functions and data types?
				combination of two: objects
				led to patterns
					SOLID principle
					dependency injection
					tdd
					agile
				all best practices are bandates
					since oop doesn't satisfy its promise
					every few years new buzzwords arise
			why does oop (encapsulation) not work?
				what is an object
					encapsulated state
					we shouldn't access state (private)
					we can only call a message
					objects call messages to each other
				in origin: messages send only copies of state, not references
					objects are state
					then messages cannot pass object references
					then A must hold a private reference to B
					then B must be part of A's private state
		Practical lessons from a year of building web components - Google I_O 2016-zfQoleQEa4w.mp4
		Federated Wiki
			Keynote - The Federated Wiki-3nB8ml6UowE.mp4
				normal mode 
					double click
					right/left   move horizontally
					drag    move items
				edit mode
					#i  info about markup
					+enter  add new item
				buttons
					flag  i claim it is my own
					+     new item
			Tutiorial
				02-02. cross-page-refactoring-tYrLwlxOKmA.mp4
		DataFiller: generate sample data
			https://www.cri.ensmp.fr/people/coelho/datafiller.html
		Ports & Adapters Architecture
			https://herbertograca.com/2017/09/14/ports-adapters-architecture/
			problems of traditional approach
				no seperation of concerns -> unreusable components
			evolving from layered architecture
				ddd: really relevant: inner layers
					where business logic should live
				cockburn: top and bottom layers are simply entry/exit points for application
					presentation <-> business logic <-> data 
					controllers <-> business logic <-> data
					/Users/mertnuhoglu/Dropbox/public/img/ss-227.png
					each side can have several entry/exit points
						ex:
							left side: api and ui are two entry/exit
							right side: orm and search engine are two entry/exits
						multiple entry/exit points, hence hexagonal
				ports & adapters: an abstraction layer as a port and adapter
			what is port
				consumer agnostic entry/exit point
				an interface 
				ex: interface to perform search
			what is adapter
				transforms an interface into another
				ex: 
		Vivaldi Browser
			https://www.howtogeek.com/250683/the-best-features-of-vivaldi-a-new-customizable-web-browser-for-power-users/
				tile tabs
				multiple select tabs
				screencapture
				#+c   copy to notes
				#!p   show panel
				add page to web panel
				f2    quick commands
				#^b   bookmark manager
				nicknames for bookmarks
			vimium
				?     help
				hl    scroll horizontally
			shortcuts
				#+p   save in pocket
		Dat: dat project
			install
				npm install -g dat
		franchise: opensource notebook for sql
			https://franchise.cloud
			/Users/mertnuhoglu/Dropbox/public/img/ss-229.png
			using
				# inside codes
				cd franchise
				PORT=3090 yarn start
				http://localhost:3090
			features
				csv xlsx sql
				table view, card view
				plots
				side by side queries 
				data pipeline
					/Users/mertnuhoglu/Dropbox/public/img/ss-230.png
				export/download
		golem: cloud sharing
			https://golem.network
		CommonCrawl: web crawler that shares all data
			http://commoncrawl.org/
		CloudCraft: cloud/network diagram visualization
			https://cloudcraft.co
		Hands-on TensorBoard
			https://www.youtube.com/watch?v=eBbEDRsCmv4
			TensorFlow graph visualization
		3D models to navigate
			https://poly.google.com
		link fish: turn websites into structured data
			scrape web sites
			https://link.fish/api/
		Wordpress Knowledge Base Plugin: Helpie
			http://helpie.pauple.com/demo/
		ripgrep
			ag ack alternatifi
			https://github.com/BurntSushi/ripgrep
			rg -tpy foo
			rg -Tpy foo
		em-keyboard: cli emoji keyboard
			https://github.com/kennethreitz/em-keyboard
			Provide the names of a few emoji, and those lucky chosen emojis will be displayed in your terminal, then copied to your clipboard
			install
				$ pip install em-keyboard
			ex
				$ em sparkles cake sparkles
				Copied! ✨🍰✨
			ex: search
				$ em -s read
				🚗  car
				🎴  flower_playing_cards
				👹  japanese_ogre
				👺  japanese_goblin
		sql_insert_writer: make long SQL INSERT statements
			https://github.com/18F/sql_insert_writer
		mermaid: diagram generation from text
			https://github.com/knsv/mermaid
			gantt, workflow, sequence, network
			install
				npm install -g mermaid.cli
			ex
				graph TD;
						A-->B;
						A-->C;
						B-->D;
						C-->D;
			https://news.ycombinator.com/item?id=13326065
				alternatives
					draw.io
			cli:
				mermaid.cli
				ex:
					mmdc -i input.mmd -o output.png
					mmdc -i input.mmd -o output.png
					mmdc -i input.mmd -o output.pdf
					mmdc -i input.mmd -o output.svg -w 1024 -H 768
					mmdc -i input.mmd -t forest
					mmdc -i input.mmd -o output.png -b '#FFF000'
					mmdc -i input.mmd -o output.png -b transparent
		word dictionary files, thesaurus databases
			myspell: previously
			hunspell: current
			R hunspell library
				uses any .dic file as dictionary
			dictionary files resource
				https://github.com/titoBouzout/Dictionaries
				english
					https://raw.githubusercontent.com/titoBouzout/Dictionaries/master/English%20(American).dic
					https://raw.githubusercontent.com/titoBouzout/Dictionaries/master/English%20(American).aff
			how to install
				https://apple.stackexchange.com/questions/11827/easy-way-to-install-additional-spell-check-dictionaries-for-os-x/11842#11842
				osx
					Move the files with the .aff and .dic extensions (ro_RO.aff and ro_RO.dic for Romanian) to your ~/Library/Spelling folder.
					Go to System Preferences > Keyboard > Text > Spelling and choose the language of your choice
			vim plugin
				https://github.com/Ron89/thesaurus_query.vim
					lookup synonyms
					replace them
			common words
				https://github.com/first20hours/google-10000-english
		tldr: examples for bash commands
			ex
				tldr tar
				tldr git mv
		marker: cli tool
			Marker is a command palette for the terminal. It lets you bookmark commands (or commands templates) and easily retreive them with the help of a real-time fuzzy matcher.
			/Users/mertnuhoglu/Dropbox/keynote_resimler/yayin/marker_cli_tool.gif
		Command line flash cards with bash-lX8jqo70r1I.mp4
			tsv file contains two columns:
				question|answer
			shows one by one
		libuv
			https://github.com/libuv/libuv
				async io made simple
				multiplatform support for async io
				features
					event loop
					async tcp/udp sockets
					async dns resolution
					async file/systems ops
		Semantic versioning
			https://semver.org
				MAJOR.MINOR.PATCH
				MAJOR version: incompatible API changes
				MINOR: new functionality backwards-compatible
				PATCH: backwards-compatible bug fixes
		Graphviz in Browser
			http://www.webgraphviz.com
		blessed: terminal interface for nodejs
			https://github.com/chjj/blessed
			https://recodes.co/introducing-gitter-cli/
		10 Reasons to Blog
			https://www.geekytidbits.com/ten-reasons-to-blog/
			help others
			help your future self
			practice writing
			enhance career
			have fun
			understand better
			learn new things
			build community
			own your content
			learn from others
mobile
	[Mosh: the mobile shell](https://mosh.org/)
index_rmd for code files id=g10749
	index_rmd for code files <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10749>
		~/projects/study/code/mongodb_import_export_dump_restore_commands.Rmd
		~/projects/study/code/nginx_rate_limiting.Rmd id=g10752
			~/projects/study/code/nginx_rate_limiting.Rmd <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10752>
			tut01
				ex00
					$ docker run -it --rm -p 80:80 sportebois/nginx-rate-limit-sandbox
					$ siege -b -r 1 -c 10 http://127.0.0.1:80/by-uri/burst0
					Dockerfile
						COPY default.conf /etc/nginx/conf.d/default.conf
						ADD index.html /etc/nginx/html/index.html
					default.conf
						limit_req_zone $request_uri zone=by_uri:10m rate=30r/m;
						limit_req_zone $binary_remote_addr zone=by_ip:10m rate=30r/m;
						server {
							location /by-uri/burst0 {
									limit_req zone=by_uri;
									try_files $uri /index.html;
							location /by-ip/burst0 {
									limit_req zone=by_ip;
									try_files $uri /index.html;
				ex01 opt03
					docker-compose.yml
						- ./nginx.conf:/etc/nginx/nginx.conf:ro
					nginx.conf
						http {
							limit_req_zone $request_uri zone=by_uri:10m rate=30r/m;
							limit_req_zone $binary_remote_addr zone=by_ip:10m rate=30r/m;
							server {
								listen 80;
								location /by-uri/burst0 {
				ex02 opt03
					docker-compose.yml
						openresty:
							image: openresty/openresty:jessie
							volumes:
								- ./conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
					nginx.conf
						http {
							limit_req_zone $request_uri zone=by_uri:10m rate=30r/m;
							limit_req_zone $binary_remote_addr zone=by_ip:10m rate=30r/m;
							server {
								location /by-uri/burst0 {
										limit_req zone=by_uri;
					test
						siege -b -r 1 -c 10 http://127.0.0.1:80/by-uri/burst0
						siege -b -r 1 -c 10 http://127.0.0.1:80/by-ip/burst0
				ex03: psk02 test with `/simpletest`
					openresty/nginx/conf/nginx.conf
						http {
							limit_req_zone $request_uri zone=by_uri:10m rate=30r/m;
							limit_req_zone $binary_remote_addr zone=by_ip:10m rate=30r/m;
					openresty/nginx/conf/includes/http/server/locations/internal_rest.conf
						location /internal/rest/ {
							limit_req zone=by_uri;
		~/projects/study/code/study_aws_cli.Rmd
		~/projects/study/bash/study_curl.Rmd id=g10775
			~/projects/study/bash/study_curl.Rmd <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10775>
			sof: How to set up a reverse Telnet on Mac OS X
			Debugging curl requests
				stackoverflow:
					opt01: `curl -vs`
						curl -vs www.stackoverflow.com 2>&1 | sed '/^* /d; /bytes data]$/d; s/> //; s/< //'
					opt02: `curl --trace-ascii`
						curl --trace-ascii curl.trace https://www.google.com/ 
					opt03: `curl --dump-header`
						curl --dump-header curl.trace2 https://www.google.com/ 
						curl -I https://www.google.com/ 
					opt04: `netcat`
						nc -l -p 8888
						curl --form 'foo=bar' localhost:8888
						`nc` output:
							POST / HTTP/1.1
							Host: localhost:8888
							User-Agent: curl/7.43.0
							...
			List open ports with netstat
				$ lsof -Pn -i4 | rg 2399
			Debug: make a query to postgrest id=g10773
				Debug using curl GET
					opt01: use netcat to debug
						nc -l -p 8888
						curl http://localhost:8888/rest/table01?select=id
					opt02: use `-v` to debug
						curl -vs http://localhost:8080/rest/table01?select=id
				Debug using R httr::GET
					opt01: use netcat to debug
						nc -l -p 8888
						response <- httr::GET("http://localhost:8888/rest/table01")
					opt02: use verbose() to debug
						response <- httr::GET("http://localhost:8080/rest/table01", verbose())
			Debug: Insert data with POST to postgrest  id=g10774
				Debug using curl POST
				Debug using R httr::POST
		~/projects/study/bash/study_netcat_nc.Rmd id=g10776
			~/projects/study/bash/study_netcat_nc.Rmd <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10776>
			Official Manual
				Start a server:
					nc -l -p 2399
				Start a client:
					nc localhost 2399
			How to Simulate a TCP/UDP Client Using Netcat
				Client-Server
			8 Practical Linux Netcat NC Command Examples
				`netstat`
		~/projects/study/code/study_openresty.Rmd id=g10751
			~/projects/study/code/study_openresty.Rmd <url:file:///~/gdrive/mynotes/content/code/ccode.md#r=g10751>
			ex
				ex01
					nginx.conf
						location / {
								root   /usr/local/openresty/nginx/html;
								index  index.html index.htm;
			cli
				docker exec ex01c_openresty_1 nginx -s reload
				docker exec ex01b_openresty_1 ls /usr/local/openresty/nginx/
			tut01
				ex01
					nginx.conf
						location / {
							default_type text/html;
							content_by_lua ' ngx.say("<p>hello, world</p>") ';
				ex01b
					docker exec ex01b_openresty_1 cat /usr/local/openresty/nginx/conf/nginx.conf
						http {
							include /etc/nginx/conf.d/*.conf;
					docker exec ex01b_openresty_1 ls /etc/nginx/conf.d
						default.conf
					docker exec ex01b_openresty_1 cat /etc/nginx/conf.d/default.conf
						server {
							location / {
								root   /usr/local/openresty/nginx/html;
								index  index.html index.htm;
				ex03
					nginx.conf
						init_by_lua_block {
							cjson = require("cjson") -- cjson is a global variable
						location /one {
							content_by_lua_block {
								local validate = 3
								decoded_one = cjson.decode({hello="world"}) --decoded_one is a global variable
			tut02
				ex01
					docker-compose.yml
						image: openresty/openresty:jessie
						- ./conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
					nginx.conf
						http {
							server {
								listen 80;
								default_type text/html;
								lua_code_cache off; #only for development
								location /simpletest {
									default_type 'text/plain';
									content_by_lua_block {
										ngx.say('hello earth')
				ex02
					nginx.conf
						location /simplejson {
							default_type 'application/json';
							content_by_lua_block {
								local cjson = require "cjson.safe" 
								ngx.say(cjson.encode({test="Encoded with CJSON",enabled=true}))
			beiyannanfei
				ex01: 
					Usage of: `prox_pass`, `^~`
						location ^~ /mytest/ {      
								proxy_pass http://127.0.0.1:5000/;
						location / {
								proxy_pass http://127.0.0.1:5000/;  
					Usage of: `ngx.say`, `=`
						location = /test {
								content_by_lua_block {
										ngx.say("hello test");
				ex03
					Usage of: `ngx.location.capture`, `args`, `ngx.req.get_uri_args`, `response.status`, `response.body`
						location = /sum {
								internal;   
								content_by_lua_block {
										local args = ngx.req.get_uri_args()
										ngx.say(tonumber(args.a) + tonumber(args.b))
						location = /app/test {  #curl "127.0.0.1:6700/app/test?aa=10&bb=20"  =>status: 200 response: 30
								content_by_lua_block {
										local arg = ngx.req.get_uri_args()
										local res = ngx.location.capture("/sum", {args={a=arg.aa,b=arg.bb}})
										ngx.say("status: ", res.status, " response: ", res.body)
		
